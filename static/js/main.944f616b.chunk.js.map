{"version":3,"sources":["components/ControlContainer/MySwitch.js","components/ControlContainer/ControlContainer.js","components/Chart/Chart.js","components/AlertBox/AlertBox.js","components/InputContainer/InputContainer.js","components/SelectFormContainer/SelectGroup.js","components/SelectFormContainer/SelectFormContainer.js","App.js","serviceWorker.js","index.js"],"names":["MySwitch","_ref","checked","onChange","value","label","react_default","a","createElement","FormControlLabel_default","control","Switch_default","color","ControlContainer","_this","this","className","ControlContainer_MySwitch","props","onSwitchChange","showVisitor","showHome","Button_default","onClick","toggleCheckbox","variant","size","React","Component","Chart","selectedTeams","series","forEach","team","team_data","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","data","Symbol","iterator","next","done","isVisitor","concat","Object","toConsumableArray","Date","parse","date","score","err","return","name","options","title","text","subtitle","yAxis","xAxis","type","dateTimeLabelFormats","day","highcharts_react_min_default","highcharts","Highcharts","AlertBox","open","onClose","content","buttonDisplay","Dialog_default","aria-labelledby","aria-describedby","DialogTitle_default","id","DialogContent_default","DialogContentText_default","DialogActions_default","autoFocus","style","margin","InputContainer","TextField_default","multiline","rows","rowsMax","input","onTextInputChange","placeholder","generateDataButtonClick","fullWidth","handleDataInput","disabled","FormList","handleChange","Checkbox_default","SelectGroup","teams","FormGroup_default","map","SelectGroup_FormList","key","SelectFormContainer","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","event","newTeams","state","slice","target","setState","handleSubmit","bind","assertThisInitialized","nextProps","teamNames","name_array","Array","from","sort","i","push","filter","selectedTeamName","closeCheckbox","handleSelectTeam","showCheckbox","SelectFormContainer_SelectGroup","App","showAlertBox","handleSwitch","handleAlertBoxClose","handleTextInput","generateSampleData","formatInputData","require","Map","item","visitor_team","home_team","has","set","visitor_data","home_data","get","names","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","input_data","sample_data","JSON","stringify","e","components_Chart_Chart","components_ControlContainer_ControlContainer","components_SelectFormContainer_SelectFormContainer","keys","components_InputContainer_InputContainer","components_AlertBox_AlertBox","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.944f616b.chunk.js","sourcesContent":["import React from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nconst MySwitch = ({checked, onChange, value, label}) => {\n    return(\n        <FormControlLabel\n            control={\n                <Switch\n                    checked={checked}\n                    onChange={onChange}\n                    color='primary'\n                    value={value}\n                />\n            }\n            label={label}\n        />\n        )\n    }\n\nexport default MySwitch;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport MySwitch from './MySwitch';\n\nclass ControlContainer extends React.Component {\n    render() {\n        return(\n            <div className='control-container'>              \n                <MySwitch label = 'Visitor'\n                          onChange = {()=>this.props.onSwitchChange(\"Visitor\")}\n                          checked = {this.props.showVisitor}\n                          value = {\"Visitor\"}\n\n                />\n                <MySwitch label = 'Home'\n                          onChange = {()=>this.props.onSwitchChange(\"Home\")}\n                          checked = {this.props.showHome}\n                          value = {\"Home\"}\n                />\n                <Button \n                    onClick={this.props.toggleCheckbox}\n                    variant=\"contained\" \n                    size='small'\n                    color='primary'              \n                >Select Teams</Button>                \n            </div>\n        )\n    }\n}\n    \n\nexport default ControlContainer;","import React from 'react'\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\n\nconst Chart = ({selectedTeams, showVisitor, showHome}) => {\n    let series = [];\n\n    selectedTeams.forEach(team => {\n        let team_data = []\n        for (let data of team.data){\n            // filter Visitor/Home game\n            if (!showVisitor && !showHome) break;\n            else if (showVisitor&&!showHome){\n                if (!data.isVisitor) continue;\n            } else if (!showVisitor && showHome){\n                if (data.isVisitor) continue;\n            }\n\n            team_data = [\n                ...team_data,\n                [\n                    Date.parse(data.date),\n                    data.score\n                ]\n            ];\n        }\n\n        series = [\n            ...series,\n            {\n                name: team.name,\n                data: team_data,\n            }\n        ]\n    })\n\n    const options = {\n        title: {\n          text: 'NBA Season Explorer'\n        },\n        subtitle: {\n            text: 'A React Web App Created by Brandon Cao'\n        },\n        yAxis:{\n            title:{\n                text: \"Score\"\n            }\n        },\n        xAxis: {\n            title: {\n              text: \"Date\"\n            },\n            type:\"datetime\",\n            dateTimeLabelFormats: {\n                day: '%m/%d/%y',\n            },\n        },\n        series:series        \n      }\nreturn (\n    <div className='chart'> \n        <HighchartsReact\n            highcharts={Highcharts}\n            options={options}\n        />\n    </div>\n    )\n}\n\nexport default Chart;","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button'\n\nconst AlertBox = ({open, onClose, title, content, buttonDisplay}) => {\n  return(\n    <div className='alert'>\n      <Dialog\n        open={open}\n        onClose={onClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {content}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose} color=\"primary\" autoFocus style={{margin:'0 auto'}}>\n            {buttonDisplay}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default AlertBox;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nclass InputContainer extends React.Component {\n    render(){\n        const data_placeholder=`[\\n{\"name\":\"Golden State Warriors\",\"data\":[{\"date\":\"10/25/16\",\"isVisitor\":false,\"score\":100},{\"date\":\"10/29/16\",\"isVisitor\":true,\"score\":120}]},\\n{\"name\":\"Los Angeles Lakers\",\"data\":[{\"date\":\"11/1/16\",\"isVisitor\":true,\"score\":106},{\"date\":\"11/3/16\",\"isVisitor\":true,\"score\":118}]}\\n]`;\n        return(\n            <div className='input-container'>\n                <TextField\n                    id=\"outlined-multiline-flexible\"\n                    label=\"Input Data\"\n                    multiline\n                    rows='8'\n                    rowsMax=\"8\"\n                    value={this.props.input}\n                    onChange={this.props.onTextInputChange}\n                    margin=\"normal\"\n                    placeholder={data_placeholder}\n                    variant=\"outlined\"\n                />\n                <div className='input-button'>\n                    <Button \n                        onClick={this.props.generateDataButtonClick} \n                        variant='contained'\n                        size='small'\n                        fullWidth\n                        color='primary'\n                        >\n                        Sample Input\n                    </Button>\n                </div>\n                <div className='input-button'>\n                    <Button \n                            onClick={this.props.handleDataInput} \n                            variant='contained'\n                            disabled = {this.props.input === ''}\n                            size='small'\n                            fullWidth\n                            color='primary'>\n                            Plot\n                    </Button>\n                </div>\n        </div>\n        )\n    }\n}\n\nexport default InputContainer;","import React from 'react';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst FormList = ({team, handleChange}) => {\n    return (\n        <FormControlLabel          \n            control={\n            <Checkbox \n                checked={team.checked} \n                color='primary' \n                onChange={handleChange(team.id)} \n                value={team.name}\n            />\n            }\n            label={team.name}\n        />\n    )\n}\n\nconst SelectGroup = (props) => {\n    const {teams} = props;\n    return(\n        <FormGroup>\n            {teams.map(team => <FormList key={team.id} team = {team} handleChange = {props.handleChange}/>)}\n        </FormGroup>\n    )\n    \n}\n\nexport default SelectGroup;","import React, {Component} from 'react';\nimport Button from '@material-ui/core/Button';\nimport SelectGroup from './SelectGroup';\nimport './SelectFormContainer.css';\n\n\nclass SelectFormContainer extends Component {\n  constructor(props){\n    super(props);\n    this.state=({\n      teams:[]\n    })\n\n    this.handleSubmit=this.handleSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps){\n    const teamNames = nextProps.teamNames;\n    let name_array = Array.from(teamNames).sort();\n    let teams = [];\n    \n    for (let i in name_array){\n      const data = {\n        id: i,\n        name: name_array[i],\n        checked: false\n      };\n      teams.push(data);\n    }\n    \n    this.setState({teams});\n  }\n    \n  handleChange = key => event => {\n    const newTeams = this.state.teams.slice();\n    newTeams[key].checked = event.target.checked;\n    this.setState({teams:newTeams})\n  };\n\n  handleSubmit(){\n    let selectedTeams = this.state.teams.filter(team => team.checked);\n\n    let selectedTeamName = [];\n    \n    selectedTeams.forEach(team => {\n      selectedTeamName.push(team.name);\n    })\n    \n    this.props.closeCheckbox();\n    this.props.handleSelectTeam(selectedTeamName);\n  }  \n\n  render(){\n    const {teams} = this.state;\n    const {showCheckbox} = this.props;\n    \n    return(\n      <div>\n        {showCheckbox && \n        <div className='select-form-wrapper'>\n          <div className='plot-buttom'>\n            <Button\n              variant=\"contained\" \n              color=\"primary\"\n              size='small'\n              onClick = {this.handleSubmit}>Plot</Button>\n          </div>\n          <div className='select-form'>\n            <SelectGroup \n                teams={teams}\n                handleSelectTeam = {this.props.handleSelectTeam}\n                handleChange = {this.handleChange}\n            />\n          </div>\n        </div>}\n      </div>\n    )\n  }\n}\n\nexport default SelectFormContainer;\n","import React, {Component} from 'react';\n// import {FormGroup} from '@material-ui/core/FormGroup';\n\nimport ControlContainer from './components/ControlContainer/ControlContainer';\n\nimport Chart from './components/Chart/Chart';\nimport AlertBox from './components/AlertBox/AlertBox';\nimport './App.css'\nimport InputContainer from './components/InputContainer/InputContainer';\nimport SelectFormContainer from './components/SelectFormContainer/SelectFormContainer';\n\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      showCheckbox:false,\n      teams:[],\n      selectedTeams:[],\n      showVisitor:true,\n      showHome: true,\n      input:\"\",\n      showAlertBox:false\n    }\n\n    this.toggleCheckbox = this.toggleCheckbox.bind(this);\n    this.handleSelectTeam = this.handleSelectTeam.bind(this);\n    this.handleSwitch = this.handleSwitch.bind(this);\n    this.handleAlertBoxClose = this.handleAlertBoxClose.bind(this);\n    this.handleDataInput = this.handleDataInput.bind(this);\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.generateSampleData = this.generateSampleData.bind(this);\n  }\n\n  componentDidMount(){\n    this.formatInputData();\n  }\n  \n  formatInputData(){\n    const data = require('./csvjson.json');\n    let teams = new Map();\n    for (let item of data) {\n      const visitor_team = item['Visitor/Neutral'];\n      const home_team = item['Home/Neutral'];\n      if (!teams.has(visitor_team)){\n        teams.set(visitor_team,[]);\n      }\n      if (!teams.has(home_team)) {\n        teams.set(home_team, []);\n      }\n\n      const visitor_data = {\n        date:item['Date'],\n        isVisitor: true,\n        score: item['PTS(Visitor)'],\n      }\n\n      const home_data = {\n        date: item['Date'],\n        isVisitor: false,\n        score: item['PTS(Home)'],\n      }\n\n      teams.set(visitor_team, teams.get(visitor_team).slice().concat(visitor_data));\n      teams.set(home_team, teams.get(home_team).slice().concat(home_data));\n    }\n      this.setState({teams});\n  }\n\n  toggleCheckbox() {\n    this.setState({\n      showCheckbox:  !this.state.showCheckbox\n    })\n  }\n\n  handleSelectTeam(names) {\n    let selectedTeams = [];\n    for (let name of names) {\n      const team = {\n        name: name,\n        data: this.state.teams.get(name),\n      }\n      selectedTeams.push(team);\n    }\n    this.setState({\n      selectedTeams\n    })\n  }\n\n  handleSwitch(type){\n    type === 'Visitor'? \n    this.setState({\n      showVisitor:!this.state.showVisitor\n    })\n    :\n    this.setState({\n      showHome:!this.state.showHome\n    })\n  }\n\n  generateSampleData(){\n    let input_data = [];\n    const sample_data = {\n      name:\"Golden State Warriors\",\n      data: this.state.teams.get(\"Golden State Warriors\")\n    }\n    input_data.push(sample_data)\n    \n    this.setState({\n      input: JSON.stringify(input_data)\n    })\n  }\n\n  handleDataInput(){\n    try {\n      JSON.parse(this.state.input);\n    } catch(e) {\n      this.setState({\n        showAlertBox:true\n      })\n      return;\n    }\n    this.setState({\n      selectedTeams: JSON.parse(this.state.input)\n    })\n  }\n\n  handleTextInput(e){\n    this.setState({\n      input: e.target.value\n    })\n  }\n\n  handleAlertBoxClose(){\n    this.setState({\n      showAlertBox:false\n    })\n  }\n\n  render(){\n    const {selectedTeams} = this.state;\n    return(\n      <div className='app'>\n        <Chart \n          selectedTeams = {selectedTeams}\n          showVisitor = {this.state.showVisitor}\n          showHome = {this.state.showHome}\n        />      \n        <ControlContainer \n          showCheckbox = {this.state.showCheckbox}\n          toggleCheckbox = {this.toggleCheckbox}\n          onSwitchChange = {this.handleSwitch}\n          showHome = {this.state.showHome}\n          showVisitor = {this.state.showVisitor}\n        \n        />\n        <SelectFormContainer \n          teamNames={this.state.teams.keys()}\n          closeCheckbox = {this.toggleCheckbox}\n          handleSelectTeam = {this.handleSelectTeam}\n          showCheckbox={this.state.showCheckbox}\n        />\n        <InputContainer \n          handleDataInput = {this.handleDataInput}\n          input = {this.state.input}\n          onTextInputChange = {this.handleTextInput}\n          generateDataButtonClick = {this.generateSampleData}\n                        \n        />\n        <AlertBox \n          open = {this.state.showAlertBox} \n          onClose = {this.handleAlertBoxClose}\n          title = \"Incorrect Input Format\"\n          content = \"Try Sample Data First!\"\n          buttonDisplay = \"Got it!\"\n        />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}